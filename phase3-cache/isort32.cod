[0x000000]	0x34080000	# ori R8, $zero, 0 (R8 = $zero | 0)
[0x000004]	0x24090060	# addiu R9, $zero, 96 (R9 = 96)
[0x000008]	0x3403DEAD	# ori R3, $zero, -8531 (R3 = $zero | -8531)
[0x00000C]	0xAD030080	# sw R3, 128(R8) (mem[R8 + 128] = R3)
[0x000010]	0x2129FFFF	# addi R9, R9, -1 (R9 = R9 + -1)
[0x000014]	0x25080004	# addiu R8, R8, 4 (R8 = R8 + 4)
[0x000018]	0x00631020	# add R2, R3, R3 (R2 = R3 + R3)
[0x00001C]	0x00621026	# xor R2, R3, R2 (R2 = R3 ^ R2)
[0x000020]	0x3843BEEF	# xori R3, R2, -16657 (R3 = R2 ^ -16657)
[0x000024]	0x1409FFF9	# bne R9, $zero, -7 (if (R9 != $zero) goto -7)
[0x000028]	0x20080004	# addi R8, $zero, 4 (R8 = 4)
[0x00002C]	0x20090060	# addi R9, $zero, 96 (R9 = 96)
[0x000030]	0x01294821	# addu R9, R9, R9 (R9 = R9 + R9)
[0x000034]	0x01294821	# addu R9, R9, R9 (R9 = R9 + R9)
[0x000038]	0x0109502A	# slt R10, R8, R9 (if (R8 < R9) R10 = 1 else R10 = 0)
[0x00003C]	0x1140000E	# beq R10, $zero, 14 (if (R10 == $zero) goto 14)
[0x000040]	0x00085820	# add R11, $zero, R8 (R11 = R8)
[0x000044]	0x8D0C0080	# lw R12, 128(R8) (R12 = mem[R8 + 128])
[0x000048]	0x000B502A	# slt R10, $zero, R11 (if ($zero < R11) R10 = 1 else R10 = 0)
[0x00004C]	0x11400007	# beq R10, $zero, 7 (if (R10 == $zero) goto 7)
[0x000050]	0x216DFFFC	# addi R13, R11, -4 (R13 = R11 + -4)
[0x000054]	0x8DAE0080	# lw R14, 128(R13) (R14 = mem[R13 + 128])
[0x000058]	0x01CC502B	# sltu R10, R14, R12 (if (R14 < R12) R10 = 1 else R10 = 0)
[0x00005C]	0x11400003	# beq R10, $zero, 3 (if (R10 == $zero) goto 3)
[0x000060]	0xAD6E0080	# sw R14, 128(R11) (mem[R11 + 128] = R14)
[0x000064]	0x000D5820	# add R11, $zero, R13 (R11 = R13)
[0x000068]	0x1000FFF7	# beq $zero, $zero, -9 (if ($zero == $zero) goto -9)
[0x00006C]	0xAD6C0080	# sw R12, 128(R11) (mem[R11 + 128] = R12)
[0x000070]	0x21080004	# addi R8, R8, 4 (R8 = R8 + 4)
[0x000074]	0x1000FFF0	# beq $zero, $zero, -16 (if ($zero == $zero) goto -16)
[0x000078]	0x1000FFFF	# beq $zero, $zero, -1 (if ($zero == $zero) goto -1)

